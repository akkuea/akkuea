name: Build and Test

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-go:
    name: Test Go Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: akkuea_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: ./packages/gin
      run: go mod download

    - name: Wait for PostgreSQL
      run: |
        # Install PostgreSQL client and wait for service
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
        # Wait for PostgreSQL to be ready
        for i in {1..30}; do
          if pg_isready -h localhost -p 5432; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL... ($i/30)"
          sleep 2
        done

    - name: Run tests
      working-directory: ./packages/gin
      env:
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASSWORD: secret
        DB_NAME: akkuea_test
        DB_PORT: 5432
        JWT_SECRET: test-jwt-secret-key
        PORT: 8080
        GIN_MODE: test
      run: |
        echo "Skipping tests in main workflow - using dedicated auth workflow instead"
        echo "Check the 'Authentication Tests' workflow for results"

  test-nextjs:
    name: Test Next.js Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: ./packages/nextjs
      run: npm install --legacy-peer-deps

    - name: Run tests
      working-directory: ./packages/nextjs
      run: npm test

    - name: Build application
      working-directory: ./packages/nextjs
      run: npm run build

  test-agent:
    name: Test Agent Package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: ./packages/agent
      run: npm install --legacy-peer-deps

    - name: Build application
      working-directory: ./packages/agent
      run: npm run build

  test-assistant:
    name: Test Assistant Package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: ./packages/assistant
      run: npm install --legacy-peer-deps

    - name: Build application
      working-directory: ./packages/assistant
      run: npm run build

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run Go format check
      working-directory: ./packages/gin
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Go code is not formatted. Please run 'go fmt ./...'"
          exit 1
        fi

    - name: Run Go vet
      working-directory: ./packages/gin
      run: go vet ./...

    - name: Set up Node.js for Next.js linting
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Next.js dependencies
      working-directory: ./packages/nextjs
      run: npm install --legacy-peer-deps

    - name: Run Next.js linting
      working-directory: ./packages/nextjs
      run: npm run lint
